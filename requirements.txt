amqp==1.4.9
anyjson==0.2.5
APScheduler==3.6.3
bcrypt==4.1.2
better-profanity==0.7.0
blinker==1.7.0
cachetools==4.2.2
certifi==2023.11.17
cffi==1.16.0
chardet==3.0.4
charset-normalizer==3.3.2
click==8.1.7
cryptography==41.0.7
defusedxml==0.7.1
flask==3.0.0
pytesseract==0.3.10
googletrans==3.1.0a0
h11==0.9.0
h2==3.2.0
hpack==3.0.0
hstspreload==2023.1.1
httpcore==0.9.1
httpx==0.25.0
hyperframe==5.2.0
idna==2.10
itsdangerous==2.1.2
Jinja2==3.1.2
MarkupSafe==2.1.3
oauthlib==3.2.2
pillow==10.2.0
pycparser==2.21
PyNaCl==1.5.0
pypdf2==3.0.1
python-telegram-bot==13.10
python-telegram-bot-raw==13.10
pytz==2023.3.post1
requests==2.31.0
rfc3986==1.5.0
six==1.16.0
sniffio==1.3.0
sqlparse==0.4.4
tornado==6.4
tzlocal==5.2
urllib3==2.1.0
werkzeug==3.0.1
gunicorn>=21.2,<22.0
dj-database-url>=2.0,<3.0
whitenoise[brotli]>=6.0,<7.0 
future>=0.16.0
certifi 
cryptography  
python-telegram-bot-raw==13.10
python-telegram-bot==13.10
future>=0.16.0
certifi
tornado>=5.1  
bardapi==0.1.23a0
cryptography
python-telegram-bot
groq==0.11.0
# Uncomment these lines to use a Postgres database. Both are needed, since in production
# (which uses Linux) we want to install from source, so that security updates from the
# underlying Heroku stack image are picked up automatically, thanks to dynamic linking.
# On other platforms/in development, the precompiled binary package is used instead, to
# speed up installation and avoid errors from missing libraries/headers.
#psycopg[c]; sys_platform == "linux"
#psycopg[binary]; sys_platform != "linux"
